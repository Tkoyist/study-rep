(()=>{"use strict";const e=function(e,o,t,s){Object.defineProperty(e,o,{value:t,enumerable:s,writable:!0,configurable:!0})};class o{constructor(){console.log("Dep构造函数")}notify(){console.log("我是notify")}}function t(e,t,s){const r=new o;2==arguments.length&&(s=e[t]),c(s),Object.defineProperty(e,t,{get:()=>(console.log("正在访问:"+e+" 的 "+t+" 数据"),s),set(o){console.log("正在修改"+e+" 的 "+t+" 为 "+o),s=o,c(o),r.notify()}})}const s=Array.prototype,r=Object.create(s);["push","pop","shift","unshift","splice","sort","reverse"].forEach((o=>{const t=s[o];e(r,o,(function(){console.log("正在执行被劫持魔改的 "+o+" 方法");const e=this.__ob__;let s=[];const r=[...arguments];switch(o){case"push":case"unshift":s=r;break;case"splice":s=r.slice(2)}return 0!=s.length&&e.observeArray(s),t.apply(this,arguments)}),!1)}));class n{constructor(t){this.dep=new o,e(t,"__ob__",this,!1),Array.isArray(t)?(Object.setPrototypeOf(t,r),this.observeArray(t)):this.walk(t)}walk(e){for(let o in e)t(e,o)}observeArray(e){for(let o=0,t=e.length;o<t;o++)console.log("observeArray 方法执行，正在侦测数组数据"),c(e[o])}}function c(e){if("object"==typeof e)return void 0!==e.__ob__?e.__ob__:new n(e)}var l={a:{m:{n:1}},b:[11,22,33,44]};c(l),l.a=10,l.b.push(41)})();