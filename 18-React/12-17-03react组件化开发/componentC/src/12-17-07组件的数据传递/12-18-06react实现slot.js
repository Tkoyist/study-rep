/*
  vue 中的插槽是在组件中预留的一个位置，当我们使用一个组件的时候，我们可以往组件内部放入其他元素的元素标签，这样组件渲染的时候就会将我们传入的标签
  替换到我们定义的插槽的位置，以此来实现一些功能视图不同但结构相同的组件的复用

  在react 中根本不需要插槽这个东西，根本用不到，因为我们前面就讲过jsx 本身就可以直接当做普通的数据进行操作。当然就可以作为数据直接传入组件，我们完全
  可以在组件中接受传入的jsx 数据，然后将其直接展示在组件中，将jsx 数据接受变量的初始值设置为null，如果不传入数据，就不显示，完全能实现和插槽一样的效果
  我们直接在子组件中定义属性用于接受jsx 代码，然后在子组件内部直接接受jsx 代码展示即可
  （类似于vue 中的具名插槽，好处就是精准，也是常用方式）

  - 我们直接将一些标签放在组件内部的话，在组件内部可以使用props.chilren 获取到传入的元素
    获取到的数据是一个数组，数组内部的jsx 代码是依据我们传入的顺序排列的
    （类似于非具名插槽）
    （一般用于放入数据较少的情况，不用担心传入的jsx 不够，不够值为undefined 不会有显示）
*/