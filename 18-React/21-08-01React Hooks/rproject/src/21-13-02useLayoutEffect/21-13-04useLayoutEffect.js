import React from 'react'

export default function UseLayoutEffectDemo() {
  /**
   * 先来波理论知识
   * 我们注意到当前的hook 与useEffect 的hook 似乎比较相似
   * 而useEffect 是在函数渲染完成之后，销毁之前执行的一个接口函数,它是无法影响当前的组件的渲染的，因为该函数执行的时候组件已经渲染完成了
   * 
   * 假如我们需要在渲染之前判断一些条件用于决定是否需要渲染一些dom元素（即修改元素的布局，这也是layout 一词的由来） 
   * useLayoutEffect 的出现就是迎合这种需求，它会在组件渲染开始之前便执行
   * 并且它会阻塞组件的渲染，即在该函数执行完毕之前，是无法渲染组件的，我们就可以在函数中修改一些展示相关的代码，例如State的值
   * 当系统得知有影响渲染的数据改变时，就会重新进行一次新的渲染（即再次调用render 函数）
   * 
   * 刚才就在想一个问题，就是我们发送网络请求是在useEffect 中，但是useEffect 是在渲染完成之后才执行的，那么也就意味着需要在组件渲染完成之后才能发送网络请求，那么不就不太对劲吗
   * 
   * 首先请求网络数据是异步请求，当请求到数据之后，我们会将其添加到组件的状态当中，添加完成之后（当然是使用useState 或者 setState 进行修改）又会重新渲染，所以不会出现什么不对劲的
   * 对于网络请求而言，异步的网络请求使用两种不同的effect hook 是没有区别的，都会在请求数据完成之后重新渲染
   */
  return (
    <div>
      
    </div>
  )
}
