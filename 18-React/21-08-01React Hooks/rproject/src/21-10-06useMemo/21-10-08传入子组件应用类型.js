import React from 'react'

export default function UseMemoDemo02() {
  /**
   * 直接笔记吧，不展示了
   * 之前在useCallback 的范例中，明明没有改变传入子组件的数据，为什么子组件重新渲染了
   * 
   * 因为memo 只会进行浅层比较，而传入的函数是引用类型，浅层比较地址不同就认为是不同的数据了
   * 既然引用类型的函数存在这个问题，那么当然引用类型的其他数据类型也会存在这个问题，只是我们平时大多数数据都来自于useState ，useState 是使用同地址的引用数据
   * 所以传入子组件的数据浅层比较也是相等的
   * 
   * 但是当我们使用一些来自其他地方的数据时，可能会出现数据深拷贝了，内容不改变，引用改变了，传入子组件后，被memo和pureComponent 认为子组件需要重新渲染，导致性能浪费
   * 但是感觉比较少用
   */
  return (
    <div>
      
    </div>
  )
}
