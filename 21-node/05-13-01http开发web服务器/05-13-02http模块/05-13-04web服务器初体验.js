// 导入http模块
const http = require('http')

// 使用http模块当中的方法创建服务器(注意只是创建，但是当前是仍未启动的)
// 创建服务器需要传入一个listener 作为参数，listener的作用就是监听向当前服务器发起的请求
const server = http.createServer((req,res)=>{
  console.log('11111111111111111');
  res.end('111')
})

// 当前只是创建了服务，当时当前服务是没有任何意义的，因为他无法与外界进行交互，或者说外界无法触发访问到当前服务
// 所以我们将服务放到主机的某个端口，相当于将营业员放到了某个窗口，让该窗口可以进行指定的服务
// 这样别人就可以通过该端口进行指定的操作（人员可以通过窗口办理指定的业务）

// 启动服务器，需要传入端口号作为参数，传入的端口号表示我们对当前服务器的哪个端口进行了监听
// 例如监听8000 窗口，即表示当前对8000 端口进行监听，当某主机向当前服务器的8000 端口发送http请求时，就能被当前的listener识别并作出响应的反应
server.listen(8000, '0.0.0.0',()=>{
  console.log('服务器启动成功');
})

// 我们每次修改服务器代码之后都要重新关闭并启动服务器，很麻烦
// nodemon ，当我们使用nodemon 启动一个服务器时，它会自动监听服务器代码的更新，并在代码更新时自动关闭并启动服务器

/**
 * web资源存储在web服务器当中，我们需要使用http请求获取web服务器资源
 * 
 * 想要使当前主机成为web服务器
 * 
 * 导入http 模块
 * 通过http模块创建服务
 * 使服务监听当前主机的某个端口
 * 
 * 这样当其他主机向当前主机发送http请求时，当前主机先监听到http请求，根据http请求找到指定的端口号
 * 此时触发监听该端口号的listener，并执行相应操作
 * 
 * http模块的主要作用就是提供了一些接口让我们可以创建针对http协议的服务，即创建可以接受http请求并返回http响应的服务
 */