console.log('第一行node 代码');
let num = 100
/**
 * 前面讲到，我们可以在控制台中使用node 直接运行一个js 文件
 * 但是要选择正确的文件夹，在文件夹中使用node 前缀直接访问某个js 文件
 * 这样就会使用node 当中自带的v8 引擎直接运行js 代码
 * 但是由于node提供了REPL，所以我们可以直接在控制台当中使用node 获取一些变量或者一些简单计算的计算结果
 * 
 * 
 * - 使用
 * 
 * - 我们可以在命令行工具中直接执行命令‘node’来开启node 的REPL
 * - 开启node 的REPL之后，我们可以直接在终端中编写代码，注意是编写代码，我们不能直接返回某个变量，想要返回的话，需要在终端手动输入打印语句
 *    我们也可以在终端当中定义变量，或者直接在终端中对变量进行更改或者进行操作
 * 
 * - 我们发现，开启node 的REPL 之后，是一个独立的编程环境，并没有包含其他的文件，我们只是在REPL 当中开辟了一个新文件在进行编程，如果我们需要加载某个文件，对文件进行编程，那我们需要使用REPL 的.load 指令
 *    直接加载某个js 文件，我们就可以对文件进行操作了
 */